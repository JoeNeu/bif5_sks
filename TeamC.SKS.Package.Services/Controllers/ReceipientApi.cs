/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using TeamC.SKS.Package.Services.Attributes;
using Microsoft.AspNetCore.Authorization;
using TeamC.SKS.Package.Services.DTOs.Models;
using TeamC.SKS.BusinessLogic.Interfaces;
using BL = TeamC.SKS.BusinessLogic.Entities;
using AutoMapper;
using Microsoft.Extensions.Logging;

namespace TeamC.SKS.Package.Services.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ReceipientApi : ControllerBase
    {
        private readonly IReceipientLogic _recLogic;
        private readonly IMapper _mapper;
        private readonly ILogger _logger;
        /// <summary>
        /// 
        /// </summary>
        /// <param name="recLogic"></param>
        /// <param name="mapper"></param>
        /// <param name="logger"></param>
        public ReceipientApi(IReceipientLogic recLogic, IMapper mapper, ILogger<ReceipientApi> logger)
        {
            _recLogic = recLogic;
            _mapper = mapper;
            _logger = logger;
            _logger.LogTrace("created ReceipientApi Controller");
        }
        /// <summary>
        /// Find the latest tracking state of a parcel by its tracking ID. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Parcel exists, here&#x27;s the tracking information.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID.</response>
        [HttpGet]
        [Route("/api/parcel/{trackingId}")]
        [ValidateModelState]
        [SwaggerOperation("TrackParcel")]
        [SwaggerResponse(statusCode: 200, type: typeof(TrackingInformation), description: "Parcel exists, here&#x27;s the tracking information.")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult TrackParcel([FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")]string trackingId)
        {
            try
            {
                BL.Parcel trackedParcel = _recLogic.TrackPackage(trackingId);
                if(trackedParcel == null)
                {
                    return StatusCode(404);
                }
                var BLtrackInfoMapped = _mapper.Map<TrackingInformation>(trackedParcel);
                return StatusCode(200, BLtrackInfoMapped);
            }
            catch (BL.BLException exc)
            {
                return handleReturn(System.Reflection.MethodBase.GetCurrentMethod().Name, exc);
            }
            catch (Exception exc)
            {
                return handleReturn(System.Reflection.MethodBase.GetCurrentMethod().Name, exc);
            }
        }
        private IActionResult handleReturn(string method, Exception exception = null)
        {
            if (exception != null)
            {
                _logger.LogError(exception.ToString());
                //throw new ServicesException($"{exception.GetType()} Exception in {method}", exception);
            }
            _logger.LogWarning(method);
            Error err = new Error() { ErrorMessage = $"{method} failed with Message-> {exception.Message}" };
            return BadRequest(err);
        }
    }
}
