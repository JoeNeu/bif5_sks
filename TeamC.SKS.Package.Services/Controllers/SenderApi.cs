/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using TeamC.SKS.Package.Services.Attributes;
using TeamC.SKS.Package.Services.DTOs.Models;
using Microsoft.AspNetCore.Authorization;
using TeamC.SKS.BusinessLogic.Interfaces;
using BL = TeamC.SKS.BusinessLogic.Entities;
using AutoMapper;
using Microsoft.Extensions.Logging;

namespace TeamC.SKS.Package.Services.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SenderApi : ControllerBase
    {
        private readonly ISenderLogic _senderLogic;
        private readonly IMapper _mapper;
        private readonly ILogger _logger;
        /// <summary>
        /// 
        /// </summary>
        /// <param name="senderLogic"></param>
        /// <param name="mapper"></param>
        /// <param name="logger"></param>
        public SenderApi(ISenderLogic senderLogic, IMapper mapper, ILogger<SenderApi> logger)
        {
            _senderLogic = senderLogic;
            _mapper = mapper;
            _logger = logger;
            _logger.LogTrace("created SenderApi Controller");
        }
        /// <summary>
        /// Submit a new parcel to the logistics service. 
        /// </summary>
        /// <param name="parcel"></param>
        /// <response code="200">Successfully submitted the new parcel</response>
        /// <response code="400">The operation failed due to an error.</response>
        [HttpPost]
        [Route("/api/parcel")]
        [ValidateModelState]
        [SwaggerOperation("SubmitParcel")]
        [SwaggerResponse(statusCode: 200, type: typeof(NewParcelInfo), description: "Successfully submitted the new parcel")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult SubmitParcel([FromBody]Parcel parcel)
        {
            try
            {
                var BLmapped = _mapper.Map<BL.Parcel>(parcel);
                NewParcelInfo newParcelInfo = _senderLogic.SubmitParcelIntoBL(BLmapped);
                return StatusCode(200, newParcelInfo);
            }
            catch (BL.BLException exc)
            {
                return handleReturn(System.Reflection.MethodBase.GetCurrentMethod().Name, exc);
            }
            catch (Exception exc)
            {
                return handleReturn(System.Reflection.MethodBase.GetCurrentMethod().Name, exc);
            }
        }

        private IActionResult handleReturn(string method, Exception exception = null)
        {
            if (exception != null)
            {
                _logger.LogError(exception.ToString());
                //throw new ServicesException($"{exception.GetType()} Exception in {method}", exception);
            }
            _logger.LogWarning(method);
            Error err = new Error() { ErrorMessage = $"{method} failed with Message-> {exception.Message}" };
            return BadRequest(err);
        }
    }
}
